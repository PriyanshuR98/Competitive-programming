#include <bits/stdc++.h>
using namespace std;

void solve()
{
    int n, k;
    cin >> n >> k;

    int initialval=n;

    vector<int> primes;
    vector<int> powers;
    vector<int> fac;

    for (int i = 2; i * i <= n; i++)
    {

        if (n % i == 0)
        {
            int cnt = 0;
            while (n % i == 0)
            {
                cnt++;
                n = n / i;
            }
            primes.push_back(i);
            powers.push_back(cnt);
        }
    }

    if (n > 1)
    {
        primes.push_back(n);
        powers.push_back(1);
    }

    // for (int i = 0; i < powers.size(); i++)
    // {
    //     cout << primes[i] << "^" << powers[i] << " ";
    // }

    int req = 0;

    for (int i = 0; i < powers.size(); i++)
    {
        req += (powers[i]);
    }

    if (req < k)
    {
        cout << -1 << endl;
        return;
    }

    int final = 1;

    int count = 0;

    for (int i = 0; i < powers.size(); i++)
    {

        while (powers[i] > 0)
        {
            if (count == k - 1)
            {
                break;
            }
            fac.push_back(primes[i]);
            powers[i]--;
            final *= primes[i];
            count++;
        }

        if(count==k-1)
        {
            break;
        }
    }

    if(initialval/final==1)
    {
        cout<<-1<<endl;
        return;
    }

    fac.push_back(initialval / final);

    for (int i = 0; i < fac.size(); i++)
    {
        cout << fac[i] << " ";
    }
    cout << endl;
}

int main()
{
    int t;
    //
    t = 1;
    while (t--)
    {
        solve();
    }
}
